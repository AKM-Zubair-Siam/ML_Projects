{"trial_id": "00", "hyperparameters": {"space": [{"class_name": "Choice", "config": {"name": "dropout_rate", "default": 0.2, "conditions": [], "values": [0.2, 0.3, 0.4], "ordered": true}}, {"class_name": "Int", "config": {"name": "units", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.001, "conditions": [], "values": [0.001, 0.0001, 1e-05], "ordered": true}}], "values": {"dropout_rate": 0.3, "units": 160, "learning_rate": 1e-05}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\Zooby\\anaconda3\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\Zooby\\anaconda3\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\Zooby\\anaconda3\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"C:\\Users\\Zooby\\anaconda3\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 233, in _build_and_fit_model\n    results = self.hypermodel.fit(hp, model, *args, **kwargs)\n  File \"C:\\Users\\Zooby\\anaconda3\\lib\\site-packages\\keras_tuner\\src\\engine\\hypermodel.py\", line 149, in fit\n    return model.fit(*args, **kwargs)\n  File \"C:\\Users\\Zooby\\anaconda3\\lib\\site-packages\\keras\\src\\utils\\traceback_utils.py\", line 123, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\Zooby\\anaconda3\\lib\\site-packages\\tree\\__init__.py\", line 435, in map_structure\n    [func(*args) for args in zip(*map(flatten, structures))])\n  File \"C:\\Users\\Zooby\\anaconda3\\lib\\site-packages\\tree\\__init__.py\", line 435, in <listcomp>\n    [func(*args) for args in zip(*map(flatten, structures))])\nValueError: None values not supported.\n"}